---
- hosts: all
  environment:
    DJ_SECRET_KEY: 3\*qr\%3v27\!\)\_cfml\*uffm3n9glfdy\%16\!\#4wm5\@8t\)rc\@do\_z\^
    DJ_DEBUG: TRUE
    DJ_DB_ENGINE: django.db.backends.mysql
    DJ_DB_NAME: swndb
    DJ_DB_USER: root
    DJ_DB_PASSWORD: mypassword
    DJ_DB_HOST: 127.0.0.1
    DJ_DB_PORT: 3306
    DJ_STATIC_ROOT: /home/vagrant/app/mysite/static
    DJ_ABSOLUTE_DATA_PATH: /usr/share/nginx/data
  tasks:
    - name: update apt-get
      apt: update_cache=yes
      become: yes
      become_method: sudo
    - name: check all dependencies
      apt: pkg={{ item }} state=latest
      with_items:
        - nginx
        - python-pip
        - build-essential
        - python
        - python-dev
        - libmysqlclient-dev
        - git
        - emacs
      become: yes
      become_method: sudo
    - name: global uwsgi install      
      pip: name={{ item }} state=latest
      with_items:
        - uwsgi
        - virtualenv
      become: yes
      become_method: sudo    
    - name: check nginx running
      service: name=nginx state=started
    - name: grab the git repository
      git: repo=https://github.com/andyreagan/hedonometer.git
           dest=/home/vagrant/app
    - name: build development environment
      command: virtualenv venv --python=python2.7 chdir=/home/vagrant/app/
    - name: install requirements
      pip: requirements=requirements.txt chdir=/home/vagrant/app/ virtualenv=/home/vagrant/app/venv
    - name: collect static files
      django_manage: virtualenv=/home/vagrant/app/venv app_path=/home/vagrant/app/ command=collectstatic
    - name: create tables
      django_manage: virtualenv=/home/vagrant/app/venv app_path=/home/vagrant/app/ command=syncdb
    - name: create tables
      django_manage: virtualenv=/home/vagrant/app/venv app_path=/home/vagrant/app/ command=migrate apps={{ item }}
      with_items:
        - hedonometer
        - twython_django
        - tastypie
    # there is a "copy" module too, but for three files just use command
    - name: copy over the config files form local
      command: cp -r /vagrant/uwsgi /vagrant/nginx.conf /vagrant/.env /home/vagrant/
    # - name: make uswgi directory for emporer mode
    #   command: mkdir /etc/uwsgi creates=/etc/uwsgi
    #   become: yes
    #   become_method: sudo
    # - name: uwsgi init service registration
    #   command: cp /vagrant/uwsgi.conf /etc/init/ creates=/etc/init/uwsgi.conf
    #   become: yes
    #   become_method: sudo
    # - name: start uwsgi in emporer mode
    #   service: name=uwsgi state=started
    # - name: link uswgi file into place
    #   file: src=/home/vagrant/uwsgi/uwsgi_config dest=/etc/uwsgi/app state=link
    #   become: yes
    #   become_method: sudo
    - name: start uwsgi under vagrant user
      command: uwsgi --ini uwsgi/uwsgi_config chdir=/home/vagrant
    # - block:
    # blocks are with ansible v2. using verion shipped w pip
    - name: link nginx config into place
      file: state=link src=/home/vagrant/nginx.conf dest=/etc/nginx/sites-enabled/app
      become: yes
      become_method: sudo
    - name: remove default site
      file: state=absent path=/etc/nginx/sites-enabled/default
      become: yes
      become_method: sudo
    - name: restart nginx
    # service: name=nginx state=reloaded
      command: nginx -s reload
      become: yes
      become_method: sudo      
      # for the whole block...
      # become: yes
      # become_method: sudo      

